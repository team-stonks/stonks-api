// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: stonks.proto

package stonks_api

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TelegramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *TelegramRequest) Reset() {
	*x = TelegramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stonks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramRequest) ProtoMessage() {}

func (x *TelegramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stonks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramRequest.ProtoReflect.Descriptor instead.
func (*TelegramRequest) Descriptor() ([]byte, []int) {
	return file_stonks_proto_rawDescGZIP(), []int{0}
}

func (x *TelegramRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CompanyStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Figi string `protobuf:"bytes,1,opt,name=Figi,proto3" json:"Figi,omitempty"`
}

func (x *CompanyStatsRequest) Reset() {
	*x = CompanyStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stonks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyStatsRequest) ProtoMessage() {}

func (x *CompanyStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stonks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyStatsRequest.ProtoReflect.Descriptor instead.
func (*CompanyStatsRequest) Descriptor() ([]byte, []int) {
	return file_stonks_proto_rawDescGZIP(), []int{1}
}

func (x *CompanyStatsRequest) GetFigi() string {
	if x != nil {
		return x.Figi
	}
	return ""
}

type CompanyStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EbitdaMargins           float64 `protobuf:"fixed64,1,opt,name=EbitdaMargins,proto3" json:"EbitdaMargins,omitempty"`
	ProfitMargins           float64 `protobuf:"fixed64,2,opt,name=ProfitMargins,proto3" json:"ProfitMargins,omitempty"`
	GrossMargins            float64 `protobuf:"fixed64,3,opt,name=GrossMargins,proto3" json:"GrossMargins,omitempty"`
	OperatingCashflow       float64 `protobuf:"fixed64,4,opt,name=OperatingCashflow,proto3" json:"OperatingCashflow,omitempty"`
	RevenueGrowth           float64 `protobuf:"fixed64,5,opt,name=RevenueGrowth,proto3" json:"RevenueGrowth,omitempty"`
	OperatingMargins        float64 `protobuf:"fixed64,6,opt,name=OperatingMargins,proto3" json:"OperatingMargins,omitempty"`
	Ebitda                  float64 `protobuf:"fixed64,7,opt,name=Ebitda,proto3" json:"Ebitda,omitempty"`
	TargetLowPrice          float64 `protobuf:"fixed64,8,opt,name=TargetLowPrice,proto3" json:"TargetLowPrice,omitempty"`
	GrossProfits            float64 `protobuf:"fixed64,9,opt,name=GrossProfits,proto3" json:"GrossProfits,omitempty"`
	FreeCashflow            float64 `protobuf:"fixed64,10,opt,name=FreeCashflow,proto3" json:"FreeCashflow,omitempty"`
	TargetMedianPrice       float64 `protobuf:"fixed64,11,opt,name=TargetMedianPrice,proto3" json:"TargetMedianPrice,omitempty"`
	CurrentPrice            float64 `protobuf:"fixed64,12,opt,name=CurrentPrice,proto3" json:"CurrentPrice,omitempty"`
	EarningsGrowth          float64 `protobuf:"fixed64,13,opt,name=EarningsGrowth,proto3" json:"EarningsGrowth,omitempty"`
	CurrentRatio            float64 `protobuf:"fixed64,14,opt,name=CurrentRatio,proto3" json:"CurrentRatio,omitempty"`
	ReturnOnAssets          float64 `protobuf:"fixed64,15,opt,name=ReturnOnAssets,proto3" json:"ReturnOnAssets,omitempty"`
	NumberOfAnalystOpinions float64 `protobuf:"fixed64,16,opt,name=NumberOfAnalystOpinions,proto3" json:"NumberOfAnalystOpinions,omitempty"`
	TargetMeanPrice         float64 `protobuf:"fixed64,17,opt,name=TargetMeanPrice,proto3" json:"TargetMeanPrice,omitempty"`
	DebtToEquity            float64 `protobuf:"fixed64,18,opt,name=DebtToEquity,proto3" json:"DebtToEquity,omitempty"`
	ReturnOnEquity          float64 `protobuf:"fixed64,19,opt,name=ReturnOnEquity,proto3" json:"ReturnOnEquity,omitempty"`
	TargetHighPrice         float64 `protobuf:"fixed64,20,opt,name=TargetHighPrice,proto3" json:"TargetHighPrice,omitempty"`
	TotalCash               float64 `protobuf:"fixed64,21,opt,name=TotalCash,proto3" json:"TotalCash,omitempty"`
	TotalDebt               float64 `protobuf:"fixed64,22,opt,name=TotalDebt,proto3" json:"TotalDebt,omitempty"`
	TotalRevenue            float64 `protobuf:"fixed64,23,opt,name=TotalRevenue,proto3" json:"TotalRevenue,omitempty"`
	TotalCashPerShare       float64 `protobuf:"fixed64,24,opt,name=TotalCashPerShare,proto3" json:"TotalCashPerShare,omitempty"`
}

func (x *CompanyStatsResponse) Reset() {
	*x = CompanyStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stonks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyStatsResponse) ProtoMessage() {}

func (x *CompanyStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stonks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyStatsResponse.ProtoReflect.Descriptor instead.
func (*CompanyStatsResponse) Descriptor() ([]byte, []int) {
	return file_stonks_proto_rawDescGZIP(), []int{2}
}

func (x *CompanyStatsResponse) GetEbitdaMargins() float64 {
	if x != nil {
		return x.EbitdaMargins
	}
	return 0
}

func (x *CompanyStatsResponse) GetProfitMargins() float64 {
	if x != nil {
		return x.ProfitMargins
	}
	return 0
}

func (x *CompanyStatsResponse) GetGrossMargins() float64 {
	if x != nil {
		return x.GrossMargins
	}
	return 0
}

func (x *CompanyStatsResponse) GetOperatingCashflow() float64 {
	if x != nil {
		return x.OperatingCashflow
	}
	return 0
}

func (x *CompanyStatsResponse) GetRevenueGrowth() float64 {
	if x != nil {
		return x.RevenueGrowth
	}
	return 0
}

func (x *CompanyStatsResponse) GetOperatingMargins() float64 {
	if x != nil {
		return x.OperatingMargins
	}
	return 0
}

func (x *CompanyStatsResponse) GetEbitda() float64 {
	if x != nil {
		return x.Ebitda
	}
	return 0
}

func (x *CompanyStatsResponse) GetTargetLowPrice() float64 {
	if x != nil {
		return x.TargetLowPrice
	}
	return 0
}

func (x *CompanyStatsResponse) GetGrossProfits() float64 {
	if x != nil {
		return x.GrossProfits
	}
	return 0
}

func (x *CompanyStatsResponse) GetFreeCashflow() float64 {
	if x != nil {
		return x.FreeCashflow
	}
	return 0
}

func (x *CompanyStatsResponse) GetTargetMedianPrice() float64 {
	if x != nil {
		return x.TargetMedianPrice
	}
	return 0
}

func (x *CompanyStatsResponse) GetCurrentPrice() float64 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *CompanyStatsResponse) GetEarningsGrowth() float64 {
	if x != nil {
		return x.EarningsGrowth
	}
	return 0
}

func (x *CompanyStatsResponse) GetCurrentRatio() float64 {
	if x != nil {
		return x.CurrentRatio
	}
	return 0
}

func (x *CompanyStatsResponse) GetReturnOnAssets() float64 {
	if x != nil {
		return x.ReturnOnAssets
	}
	return 0
}

func (x *CompanyStatsResponse) GetNumberOfAnalystOpinions() float64 {
	if x != nil {
		return x.NumberOfAnalystOpinions
	}
	return 0
}

func (x *CompanyStatsResponse) GetTargetMeanPrice() float64 {
	if x != nil {
		return x.TargetMeanPrice
	}
	return 0
}

func (x *CompanyStatsResponse) GetDebtToEquity() float64 {
	if x != nil {
		return x.DebtToEquity
	}
	return 0
}

func (x *CompanyStatsResponse) GetReturnOnEquity() float64 {
	if x != nil {
		return x.ReturnOnEquity
	}
	return 0
}

func (x *CompanyStatsResponse) GetTargetHighPrice() float64 {
	if x != nil {
		return x.TargetHighPrice
	}
	return 0
}

func (x *CompanyStatsResponse) GetTotalCash() float64 {
	if x != nil {
		return x.TotalCash
	}
	return 0
}

func (x *CompanyStatsResponse) GetTotalDebt() float64 {
	if x != nil {
		return x.TotalDebt
	}
	return 0
}

func (x *CompanyStatsResponse) GetTotalRevenue() float64 {
	if x != nil {
		return x.TotalRevenue
	}
	return 0
}

func (x *CompanyStatsResponse) GetTotalCashPerShare() float64 {
	if x != nil {
		return x.TotalCashPerShare
	}
	return 0
}

var File_stonks_proto protoreflect.FileDescriptor

var file_stonks_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x6e, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0f, 0x54,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x46, 0x69, 0x67, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46,
	0x69, 0x67, 0x69, 0x22, 0xbc, 0x07, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x45, 0x62, 0x69, 0x74, 0x64, 0x61, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x45, 0x62, 0x69, 0x74, 0x64, 0x61, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x73,
	0x73, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x47, 0x72, 0x6f, 0x73, 0x73, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x11,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x12, 0x2a, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x45, 0x62, 0x69, 0x74, 0x64, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x45, 0x62,
	0x69, 0x74, 0x64, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f,
	0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x47, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x46, 0x72, 0x65, 0x65, 0x43, 0x61, 0x73, 0x68, 0x66, 0x6c, 0x6f, 0x77,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x46, 0x72, 0x65, 0x65, 0x43, 0x61, 0x73, 0x68,
	0x66, 0x6c, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x11, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e,
	0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x4f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x4f, 0x70, 0x69,
	0x6e, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x4f, 0x70, 0x69, 0x6e,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x65,
	0x61, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x44, 0x65, 0x62, 0x74, 0x54, 0x6f, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x44, 0x65, 0x62, 0x74, 0x54, 0x6f, 0x45, 0x71, 0x75, 0x69,
	0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x45, 0x71,
	0x75, 0x69, 0x74, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x4f, 0x6e, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73,
	0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61,
	0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73,
	0x68, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x11, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x32, 0x91, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x6e, 0x6b, 0x73, 0x41, 0x70, 0x69,
	0x12, 0x42, 0x0a, 0x14, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2d, 0x73, 0x74, 0x6f, 0x6e, 0x6b, 0x73,
	0x2f, 0x73, 0x74, 0x6f, 0x6e, 0x6b, 0x73, 0x2d, 0x61, 0x70, 0x69, 0x3b, 0x73, 0x74, 0x6f, 0x6e,
	0x6b, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stonks_proto_rawDescOnce sync.Once
	file_stonks_proto_rawDescData = file_stonks_proto_rawDesc
)

func file_stonks_proto_rawDescGZIP() []byte {
	file_stonks_proto_rawDescOnce.Do(func() {
		file_stonks_proto_rawDescData = protoimpl.X.CompressGZIP(file_stonks_proto_rawDescData)
	})
	return file_stonks_proto_rawDescData
}

var file_stonks_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_stonks_proto_goTypes = []interface{}{
	(*TelegramRequest)(nil),      // 0: TelegramRequest
	(*CompanyStatsRequest)(nil),  // 1: CompanyStatsRequest
	(*CompanyStatsResponse)(nil), // 2: CompanyStatsResponse
	(*empty.Empty)(nil),          // 3: google.protobuf.Empty
}
var file_stonks_proto_depIdxs = []int32{
	0, // 0: StonksApi.TelegramNotification:input_type -> TelegramRequest
	1, // 1: StonksApi.GetCompanyStats:input_type -> CompanyStatsRequest
	3, // 2: StonksApi.TelegramNotification:output_type -> google.protobuf.Empty
	2, // 3: StonksApi.GetCompanyStats:output_type -> CompanyStatsResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_stonks_proto_init() }
func file_stonks_proto_init() {
	if File_stonks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stonks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stonks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stonks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stonks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stonks_proto_goTypes,
		DependencyIndexes: file_stonks_proto_depIdxs,
		MessageInfos:      file_stonks_proto_msgTypes,
	}.Build()
	File_stonks_proto = out.File
	file_stonks_proto_rawDesc = nil
	file_stonks_proto_goTypes = nil
	file_stonks_proto_depIdxs = nil
}
